day1:

html
1. creating html structure
2. displaying the raw data
3. applying the formatting elements to html content: h1 - h6, p, strong, etc., 
4. working with attributes, applying the attributes to html elements, 
5. creating the lists: order list, unorder list and definition list
6. creating the tables and displaying the data or organizing the data
7. working with images & displaying
8. creating the sample page
9. creating the form with elements of, input: text, email, password, url, radio, checkbox, etc.,
10. working with media objects., audio & video
11. implementing the semantic elements

css
1. started with css, introduction


day2: 

css
1. creating the sample html page
2. applying the inline styles
3. applying the embedded styles
4. applying the external styles
5. understanding the concept of custom styling: applying class attribute
6. understanding the concept of custom styling: applying id attribute
7. applying the colors: name, numeric & hexadecimal
8. creating the sample web page with css & html, using multiple properties
9. creating the blog page design with horizontal & vertical
10. understanding about display property and addiional properties
11. understanding about the position propertis and additional properties
12. created the sample page using flex box, display: flex property

day3: 

css
1. create one more example or concept of grid layout
2. applyed the hovering effects to buttons
3. aplyed the hovering effects to images
4. created the menu bar with icons with css properties

bootstrap
1. started with the concept of bootstrap / introduction
2. created the fixed layout
3. created the fluid layout
4. create the breakpoint layout
5. creted the multi column layout with content
6. create the sample or common web page layout
7. implemented the concept of typography

day4: 

bootstrap
1. cont., with the concept of typography, 
2. created the table layouts & its classes
3. created the lists & list groups
4. create the forms, different form layouts, 
5. form elements & its appearance implemented
6. created the custom forms
7. implemented the input groups
8. created the buttons & its dropdowns
9. added the buttons & its styles
10. created the  button groups
11. displayed the images & its alignments
12. created the responsive videos displaying with ratios
13. created the dfferent ways of cards designing
14. create the image overlay
15. implemented the media objects & its alignments
16. create the basic navigations


day5: 

bootstrap
1. created the navigations
2. responsive navigations with form, icons & dropdowns
3. creating the hover effect dropdown navigations
4. creating the accordions
5. creating the misc., components like., pagination, progressbars, etc., 
6. creating the boiler plate with html,
7. creating the 24 column grid system
8. creating the shopping cart view layout.,


day6: 

bootstrap
1. cont., with rest of the shopping cart view layout design., 
2. clarifying doubts, if any about html, css, and bootstrapp

javascript: 
2. starting or introduction of javascript, its use in web development
3. javascript syntax, implementations
4. displaying out, discusing about identifiers, keywords, 
5. about data types
6. comments
7. declaring variables: let, const
8. operators
9. decision making statements
10. loop statements
11. arrays
12. functions
13. working with nodes

day7: 

javascript:
1. selectors
2. styling
3. get and set attributes
4. manipulation
5. navigation
6. windows 
7. screen
8. location
9. history
10. navigator
11. dialog boxes
12. timer


day8: 

javascript and json:
1. class & objects
2. data, math, strings - builtin objects
3. type conversions
4. event listeners
5. event propagation
6. borrowing methods
7. hoisting behavior
8. callback functions
9. closures
10. promises
11. strict mode
12. json

day9: 

javascript and ajax:
1. error handling
2. form validation
3. cookies
4. ajax requests
5. es6
6. some practical examples of javascript

jquery:
7. jquery introduction, syntax,
8. selectors, events

day10:

jquery: 
1. jquery effects (show / hide, fade, slide etc., )
2. jquery manipulation (get / set, insert, reemove, css class, style properties)
3. jquery traversing, ancestors, descendants, siblings, 
4. ajax, load, get, post, no conflict
5. jquery practical examples
6. creating the dynamic actions using bootstrap, javascript, jquery 
7. debugging techniques of javascript


day 11: 

jquery
1. jquery manipulation (get / set, insert, reemove, css class, style properties)
2. jquery traversing, ancestors, descendants, siblings, 
3. ajax

day 12: 

jquery
1. jquery practical examples
2. creating the dynamic actions using bootstrap, javascript, jquery 
3. debugging techniques of javascript

sass
    Introducing SASS
        Defining CSS Preprocessors
        Why use Preprocessors?
        What is SASS?
        SCSS or Sass?
    Setting up SASS
        Environment Setup
        Folder Structure
        File Structure
        Initializing our Project Directory
        Install node-sass
        Compiling Sass code to CSS
        Live Reload

day 13:

sass
    Variables
        What are Variables?
        Variables in Action
    Nesting
        What is Nesting?
        Nesting in Action
    Mixins
        What are Mixins?
        Common Use Cases
    Functions
        What are Functions?
        Function Examples
    Partials and Importing
        Using Partials
        @import in CSS vs SASS
    Inheritance
        What is Inheritance?
        Examples of Inheritance
    The Ampersand Operator
        What is the SASS Ampersand Operator?
    Control Directives
        @if and @else/li>
        @for
        @while


day 14:

sass
    Interpolation
        Understanding the Syntax
        Why use Interpolation?
    Placeholders
        Why use Placeholders?
    Structuring your SASS Projects
        How do we structure our SASS projects?
        Simple Structure
        The 7-1 Pattern
        Get up and running with 7-1
    Setting up Media Queries with SASS
        Setting up your mixins
        Using a Mixin
        Another way to set up our Mixins
    Setting up the Perfect Build Process
        What is a Build Process?
        Creating the Build Process!

javascript
	promise
	async & await
	
day 15:
	javascript
		sets
		maps
		iterators & iterables
		generators
		debugging
		symbol
		


day 16: 

javascript
	reflect & its functions
	proxy

less
	introduction
	installation

	nested rules
	nested directives
	operations
	escaping
	functions
	namespace
	scope
	importing
	variables
	extend
	mixins
	parametric
	mixins as functions
	passing rulesets to mixins
	import directives
	import options
	mixin guard
	css guard

	loops
	merge
	parent selectors
	

day 17:

less
	functions   
		misc functions
		string functions

		list functions
		math functions
		type functions
		color definition functions
		color operation
		color blending

	sample  project in less

reactjs: 
	introduction
		what is reactjs
		advantages of reactjs
		what is single page application
	project setup
		installing the required node & npm
		create the first reactjs project

day 18: 
	reactjs
		working with 
			html, 
			css, 
			scss, 
			less
			images, 
			javascript
		create the sample webpage using css
		create the sample webpage using sass
		create the sample webpage using less
		
day 19:
	creating the website with group of components and pages
	implementation of routing
	segregating the total project with components and pages
	working with event handlings like click, blur, focus, change etc., 
	working with property binding, 1. one way property binding, 2. two way property binding
	working with forms & its validation

day 20:
	implementing the life cycle hooks: 
	1. class based life cycle hook
	2. funtional based life cycle hook

day 21: 
	